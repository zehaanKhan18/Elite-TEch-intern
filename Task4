# Task 4: Optimization Model using Linear Programming (PuLP)

import pulp

# Define the problem
# Example: Maximize profit from products A and B
model = pulp.LpProblem("Maximize_Profit", pulp.LpMaximize)

# Decision variables
A = pulp.LpVariable("Product_A", lowBound=0, cat='Continuous')
B = pulp.LpVariable("Product_B", lowBound=0, cat='Continuous')

# Objective function: Maximize profit
model += 20 * A + 30 * B, "Total_Profit"

# Constraints
model += 2 * A + 1 * B <= 100, "Material_Constraint"
model += 1 * A + 1 * B <= 80, "Labor_Constraint"

# Solve the problem
model.solve()

# Print the results
print("Status:", pulp.LpStatus[model.status])
print("Optimal Production of Product A:", pulp.value(A))
print("Optimal Production of Product B:", pulp.value(B))
print("Total Profit:", pulp.value(model.objective))

# Insights
if pulp.LpStatus[model.status] == 'Optimal':
    print("\nBusiness Insight:")
    print("- Produce {:.0f} units of Product A".format(pulp.value(A)))
    print("- Produce {:.0f} units of Product B".format(pulp.value(B)))
    print("- This yields a maximum profit of ${}".format(pulp.value(model.objective)))
